!(function (t) {
  (Drupal.behaviors.cellular = {
    attach(e, n) {
      const i = {
        opts: {
          cclass: 'cellular',
          activeclass: 'active',
          breakpoint: 'window_small',
        },
        state: { breakpoint: 0, scrolltop: 0, scrolltimer: 0 },
        breakpoint: function () {
          window
            .getComputedStyle(document.querySelector('body'), ':before')
            .getPropertyValue('content');
          const t = {},
            e = jQuery(window).width();
          switch (e) {
            case e < 650:
              t.type = 'window_small';
              break;
            case e > 650 && e < 800:
              t.type = 'window_narrow';
              break;
            case e > 1200:
              t.type = 'window_large';
              break;
            default:
              t.type = 'window_default';
          }
          return jQuery('body').addClass(t.type), (t.size = e), t;
        },
        activate: function (t) {
          return (
            (t = t || i.opts.activeclass),
            this.each(function () {
              const e = jQuery(this);
              e.hasClass(t) || e.addClass(t).siblings().removeClass(t);
            })
          );
        },
        deactivate: function (t) {
          return (
            (t = t || i.opts.activeclass),
            this.each(function () {
              jQuery(this).removeClass(t);
            })
          );
        },
        kidWrap: function () {
          return this.each(function () {
            const t = jQuery(this);
            t.children().length > 1 && t.children(':gt(0)').wrapAll('<div>');
          });
        },
        classify: function (t) {
          return this.each(function () {
            jQuery(this).addClass(t.join(' '));
          });
        },
        debounce: function (t, e, n) {
          let i;
          return function () {
            const a = this,
              s = arguments,
              o = function () {
                (i = null), n || t.apply(a, s);
              },
              c = n && !i;
            clearTimeout(i), (i = setTimeout(o, e)), c && t.apply(a, s);
          };
        },
        transitionend: function () {
          let t;
          const e = document.createElement('test'),
            n = {
              transition: 'transitionend',
              OTransition: 'oTransitionEnd',
              MozTransition: 'transitionend',
              WebkitTransition: 'webkitTransitionEnd',
            };
          for (t in n) if (void 0 !== e.style[t]) return n[t];
        },
        scrolltimer: function (t, e, n) {
          window.clearTimeout(i.state.scrolltimer),
            (i.state.scrolltimer = window.setTimeout(function () {
              t.removeClass(`${e} ${n}`);
            }, 2e3));
        },
        buttonize: function (e, n, i) {
          const a = t('<a />')
            .prop({ href: e, title: n, tabindex: '0' })
            .text(n)
            .classify(i);
          return t(this).append(a);
        },
        scrollto: function (t, e) {
          (t = t || jQuery(this).attr('href')),
            jQuery('a[href^="#"]').on('click', function (n) {
              n.preventDefault(),
                jQuery('html, body')
                  .stop()
                  .animate({ scrollTop: jQuery(t).offset().top }, e);
            });
        },
      };
      (i.windowstate = i.debounce(function () {
        const t = i.state.breakpoint;
        (i.state.breakpoint = i.breakpoint().type),
          jQuery('body').removeClass(t).addClass(i.state.breakpoint);
      }, 100)),
        (i.scrollstate = i.debounce(
          function (t, e) {
            const n = jQuery('body'),
              a = 'scrolling-up',
              s = 'scrolling-down',
              o = jQuery(document).scrollTop(),
              c = n.height() / 3;
            o > 30 ? n.addClass('scrolled') : n.removeClass('scrolled'),
              o > i.state.scrolltop
                ? n.addClass(s).removeClass(a)
                : n.addClass(a).removeClass(s),
              o < c
                ? n.removeClass('page-middle page-bottom').addClass('page-top')
                : o > c && o < 2 * c
                ? n.removeClass('page-top page-bottom').addClass('page-middle')
                : n.removeClass('page-top page-middle').addClass('page-bottom'),
              (i.state.scrolltop = o),
              (i.state.scrolled =
                (o / (n.height() - jQuery(window).height())) * 100);
          },
          0,
          !0,
        )),
        i.windowstate(),
        i.scrollstate(),
        jQuery(window).on('resize', i.windowstate),
        jQuery(document).on('scroll', i.scrollstate),
        (i.jAccordion = function (t) {
          const e = jQuery.extend(
              {
                active: 0,
                duration: 500,
                easing: 'swing',
                single: !1,
                pclass: 'panel',
              },
              t,
            ),
            n = {};
          return (
            (e.pselect = `.${e.pclass}`),
            (n.showContent = function (t) {
              e.single
                ? (t.siblings().find(e.pselect).slideUp(e.duration, e.easing),
                  t.activate().find(e.pselect).slideDown(e.duration, e.easing))
                : t
                    .toggleClass(i.opts.activeclass)
                    .find(e.pselect)
                    .slideToggle(e.duration, e.easing);
            }),
            (n.style = function (t) {
              t.once('jAccordion', function () {
                t.prop('tabindex', '0')
                  .find('> li')
                  .each(function () {
                    const t = jQuery(this);
                    t.kidWrap(),
                      t.children().eq(0).addClass('title'),
                      t.children().eq(1).classify([i.opts.cclass, 'panel']),
                      t.find(e.pselect).hide(),
                      t.find('.title').click(function (e) {
                        e.preventDefault(), n.showContent(t);
                      });
                  });
              });
            }),
            (n.init = function () {
              const t = jQuery(this);
              n.style(t), n.showContent(t.children().eq(e.active));
            }),
            this.each(n.init)
          );
        }),
        (i.jCard = function (t) {
          const e = jQuery.extend({ cclass: 'jCard' }, t),
            n = {
              init: function () {
                const t = jQuery(this);
                t.once(e.cclass, function () {
                  const n = t.find('a').eq(0),
                    i = n.attr('href');
                  if (void 0 !== i) {
                    const a = jQuery(`<a href="${i}" tabindex="0" />`).classify(
                      [
                        `${e.cclass}-wrap`,
                        n.attr('class') ? n.attr('class') : null,
                      ],
                    );
                    t.wrap(a).find('h2, h3').addClass('title');
                  }
                }),
                  t
                    .on('mouseenter touchstart', function () {
                      t.activate();
                    })
                    .on('mouseleave touchend', function () {
                      t.deactivate();
                    });
              },
            };
          return this.each(n.init);
        }),
        (i.jFormal = function (t) {
          const e = jQuery.extend(
            {
              inputs: [
                'input[type="text"]',
                'input[type="email"]',
                'input[type="password"]',
                'textarea',
              ],
            },
            t,
          );
          return this.each(function () {
            const t = e.inputs.join(',');
            jQuery(t).each(function () {
              const t = jQuery(this),
                e = (holder = t.attr('placeholder'));
              t.on('focus', function () {
                (holder = ''),
                  this.value === this.defaultValue && (this.value = '');
              }).on('blur', function () {
                (holder = e),
                  '' === this.value && (this.value = this.defaultValue);
              });
            });
          });
        }),
        (i.jMmenu = function (t) {
          const e = jQuery.extend(
              {
                breakpoint: i.opts.breakpoint,
                parent: jQuery('body'),
                cclass: 'jMmenu',
                triggertext: 'Menu',
                animateclass: 'slide-right',
                throttle: 101,
              },
              t,
            ),
            n = {};
          return (
            (n.mediaQuery = i.debounce(function (t, a) {
              if (e.breakpoint === i.state.breakpoint) {
                const n = t.children([0]);
                let i = null;
                (a.mmenu = !0),
                  e.parent.addClass(e.animateclass),
                  e.triggertext &&
                    (i = `<span class="${e.cclass}-triggertext">${e.triggertext}</span>`),
                  t
                    .prop('tabindex', '0')
                    .addClass(`${e.cclass}-trigger`)
                    .append(i),
                  n.addClass(`${e.cclass}-menu`).prependTo(e.parent);
              } else (a.mmenu = !1), (a.active = !1), e.parent.removeClass(`${e.cclass}-active ${e.cclass}-inactive ${e.animateclass}`), t.attr('aria-label', 'Menu').removeClass(`${e.cclass}-trigger`), jQuery(`.${e.cclass}-menu`).removeClass(`${e.cclass}-menu`).prependTo(t), jQuery(`.${e.cclass}-triggertext`).remove();
              n.menutrigger(t, a);
            }, e.throttle)),
            (n.menutrigger = function (t, n) {
              const i = [`${e.cclass}-active`, `${e.cclass}-inactive`];
              n.active
                ? (t.activate().attr('aria-label', 'Close Menu'),
                  jQuery(`.${e.cclass}-menu`).addClass('active'),
                  e.parent.addClass(i[0]).removeClass(i[1]))
                : (t.deactivate().attr('aria-label', 'Open Menu'),
                  jQuery(`.${e.cclass}-menu`).removeClass('active'),
                  n.mmenu && e.parent.addClass(i[1]).removeClass(i[0]));
            }),
            (n.style = function (t) {
              const e = t.find('>ul');
              if (e.find('ul').length > 0) {
                e.find('li ul')
                  .addClass('child')
                  .parent()
                  .addClass('parent')
                  .css({ willChange: 'contents' });
              }
            }),
            (n.listen = function (t, i) {
              jQuery(window).on('resize', function () {
                n.mediaQuery(t, i);
              }),
                t.on('click', function () {
                  i.mmenu && ((i.active = !i.active), n.menutrigger(t, i));
                }),
                jQuery(document).on('keyup', function (a) {
                  jQuery(`.${e.cclass}-trigger`).is(':focus') &&
                    13 === a.which &&
                    (a.preventDefault(),
                    (i.active = !1 === i.active),
                    n.menutrigger(t, i)),
                    !0 === i.active &&
                      27 === a.which &&
                      (a.preventDefault(),
                      (i.active = !1),
                      n.menutrigger(t, i));
                }),
                jQuery('.parent > a').click(function (t) {
                  if (i.mmenu) {
                    const e = jQuery(this).parent(),
                      n = e.children(':gt(0)');
                    n.length > 0 &&
                      (t.preventDefault(),
                      n.hasClass('active')
                        ? (e.removeClass('active'), n.removeClass('active'))
                        : (e.addClass('active'), n.addClass('active')));
                  }
                });
            }),
            (n.init = function () {
              const t = jQuery(this),
                i = { active: !1, mmenu: !1 };
              t.addClass(e.cclass).once(e.cclass, n.style(t)),
                n.mediaQuery(t, i),
                n.listen(t, i);
            }),
            this.each(n.init)
          );
        }),
        (i.jScrolli = function (e) {
          const n = t.extend(
              {
                cclass: 'jScrolli',
                active: 0,
                background: 'img:first',
                title: 'h2, h3',
                height: 'auto',
                controls: {
                  showmarkers: !0,
                  showcontrols: !0,
                  keyboard: !0,
                  swipe: !0,
                  autoplay: !0,
                  pauseonhover: !0,
                  autodim: !0,
                  delay: 1.4,
                  text: {
                    next: 'Next',
                    prev: 'Prev',
                    pause: 'Pause',
                    play: 'Play',
                  },
                },
                transition: { pause: 5 },
                caption: { enable: !0, autohide: !1, selector: '.caption' },
              },
              e,
            ),
            a = {
              button: function (t) {
                return `<a class="${
                  n.cclass
                }-control ${t.toLowerCase()}">${t}</a>`;
              },
              normalize: function (t) {
                (t.prev = t.current - 1),
                  (t.next = t.current + 1),
                  t.prev < 0 && (t.prev = t.count),
                  t.next > t.count && (t.next = 0);
              },
              go: function (t, e, s) {
                if (!s.paused) {
                  const o = 'transition',
                    c = e.find(`.${n.cclass}-slide`);
                  c.find('a').prop('tabindex', '-1'),
                    (s.current = parseInt(t)),
                    a.normalize(s),
                    jQuery(c[s.prev]).activate('previous'),
                    jQuery(c[s.next]).activate('next'),
                    jQuery(c[t]).activate().find('a').prop('tabindex', '-1'),
                    e
                      .parent()
                      .addClass(o)
                      .on(i.transitionend(), function () {
                        jQuery(this).removeClass(o);
                      }),
                    n.controls.showmarkers && a.mark(e, s),
                    n.caption.enable && a.caption(c, s),
                    n.controls.autoplay && a.updateinterval(e, s);
                }
              },
              mark: function (t, e) {
                t.siblings()
                  .find(`.${n.cclass}-marker`)
                  .eq(e.current)
                  .activate();
              },
              caption: function (e, a) {
                const s = e.parent().parent(),
                  o = s.find('> .caption p');
                (a.caption = s.find(n.caption.selector).eq(a.current).text()),
                  o.on(i.transitionend(), function () {
                    t(this).text(a.caption).activate();
                  });
              },
              updateinterval: function (t, e) {
                n.controls.autoplay &&
                  !e.paused &&
                  (clearInterval(e.interval),
                  (e.interval = setInterval(function () {
                    (e.current = e.next), a.go(e.current, t, e);
                  }, 1e3 * n.transition.pause)));
              },
              events: function (t, e) {
                t.siblings('.controls');
                const i = t.parent();
                n.controls.showmarkers &&
                  t
                    .siblings()
                    .find(`.${n.cclass}-marker`)
                    .on('click', function () {
                      (e.current = jQuery(this).attr('data-href')),
                        (e.paused = !1),
                        a.go(e.current, t, e);
                    }),
                  i.find('.prev').on('click', function (n) {
                    (e.current = e.prev),
                      (e.paused = !1),
                      a.go(e.current, t, e);
                  }),
                  i.find('.next').on('click', function (n) {
                    (e.current = e.next),
                      (e.paused = !1),
                      a.go(e.current, t, e);
                  }),
                  i.on({
                    mouseover() {
                      (e.active = !0),
                        n.controls.pauseonhover && (e.paused = !0),
                        n.controls.autodim &&
                          (i.activate(), window.clearTimeout(i.timeout));
                    },
                    mouseout() {
                      (e.active = !1),
                        n.controls.pauseonhover && (e.paused = !1),
                        n.controls.autodim &&
                          (i.timeout = window.setTimeout(function () {
                            i.deactivate();
                          }, 1e3 * n.controls.delay));
                    },
                  }),
                  n.controls.keyboard &&
                    jQuery(document).on('keyup', function (n) {
                      if (-1 !== [37, 39].indexOf(n.which)) {
                        switch (
                          (n.preventDefault(), (e.paused = !1), n.which)
                        ) {
                          case 37:
                            e.current = e.prev;
                            break;
                          case 39:
                            e.current = e.next;
                        }
                        a.go(e.current, t, e);
                      }
                    });
              },
              setheight: function (t, e) {
                jQuery(document).ready(function () {
                  'auto' === n.height
                    ? t.find('> li').each(function () {
                        const t = this.clientHeight;
                        t > e.maxheight && (e.maxheight = t);
                      })
                    : (e.maxheight = n.height),
                    t.height(e.maxheight);
                });
              },
              style: function (t, e) {
                const s = t.find('> li');
                if (
                  (t
                    .prop('tabindex', '0')
                    .addClass(i.opts.cclass)
                    .wrap(`<div class="${i.opts.cclass} ${n.cclass}-wrap" />`)
                    .parent()
                    .css({ willChange: 'contents' }),
                  s
                    .prop('tabindex', '-1')
                    .addClass(`${n.cclass}-slide`)
                    .each(function () {
                      const t = jQuery(this);
                      if (
                        (t
                          .children()
                          .wrapAll(
                            `<div class="${n.cclass}-slide-content cell" />`,
                          ),
                        n.title && t.find(n.title).addClass('title'),
                        n.background)
                      ) {
                        const e = t.find(n.background);
                        e.length &&
                          (e.hide(),
                          t
                            .css({
                              'background-image': `url(${e.attr('src')})`,
                            })
                            .addClass(`${n.cclass}-background`));
                      }
                    }),
                  a.setheight(t, e),
                  n.controls.showmarkers)
                ) {
                  const i = jQuery(`<ul class="${n.cclass}-markers"/>`);
                  for (let t = 0; t < s.length; t += 1)
                    i.append(
                      `<li class="${n.cclass}-marker" data-href="${t}">${
                        t + 1
                      }</li>`,
                    );
                  t.after(i), a.mark(t, e);
                }
                if (n.caption.enable) {
                  const e = t.find(n.caption.selector);
                  e.length &&
                    (e.hide(),
                    t.after(`<div class="${n.cclass}-caption"><p/></div>`));
                }
                if (n.controls.showcontrols) {
                  let e;
                  const i = [
                    a.button(n.controls.text.prev),
                    a.button(n.controls.text.next),
                  ];
                  for (e = 0; e < i.length; e += 1) t.parent().prepend(i[e]);
                }
              },
              init: function () {
                const t = jQuery(this),
                  e = {
                    active: !0,
                    paused: !1,
                    count: t.find('> li').length - 1,
                    width: n.width ? n.width : t.width(),
                    maxheight: 0,
                    interval: 0,
                    controls: 0,
                    caption: jQuery(n.caption.selector).html(),
                    current: n.active ? n.active : 0,
                  };
                t.once(n.cclass, function () {
                  a.style(t, e);
                }),
                  a.events(t, e),
                  a.go(e.current, t, e),
                  a.updateinterval(t, e);
              },
            };
          return this.each(a.init);
        }),
        (i.jSocial = function (e) {
          const n = document.title,
            i = t("link[rel='canonical']")
              ? t("link[rel='canonical']").attr('href')
              : window.location,
            a = jQuery.extend(
              {
                sharetitle: '',
                followtitle: '',
                buttonclass: 'social',
                share: [],
                follow: {},
              },
              e,
            ),
            s = {
              style: function (e) {
                e.once('jSocial', function () {
                  if (a.share) {
                    const s = t('<div class="jSocial-share" />');
                    let o;
                    const c = {
                      facebook: {
                        title: 'Facebook',
                        url: `http://facebook.com/sharer/sharer.php?u=${i}`,
                      },
                      digg: {
                        title: 'Digg',
                        url: `http://digg.com/submit?url=${i}&title=${n}`,
                      },
                      google: {
                        title: 'Google',
                        url: `https://plus.google.com/share?url=${i}`,
                      },
                      twitter: {
                        title: 'Twitter',
                        url: `https://twitter.com/intent/tweet?url=${i}&text=${n}`,
                      },
                      linkedin: {
                        title: 'LinkedIn',
                        url: `http://linkedin.com/shareArticle?url=${i}&title=${n}`,
                      },
                      pinterest: {
                        title: 'Pinterest',
                        url: `http://pinterest.com/pin/create/bookmarklet/?url=${i}&description=${n}`,
                      },
                      reddit: {
                        title: 'Reddit',
                        url: `http://reddit.com/submit?url=${i}&title=${n}`,
                      },
                      stumbleupon: {
                        title: 'StumbleUpon',
                        url: `http://www.stumbleupon.com/submit?url=${i}&title=${n}`,
                      },
                      tumblr: {
                        title: 'Tumblr',
                        url: `https://www.tumblr.com/widgets/share/tool?canonicalUrl=${i}&title=${n}`,
                      },
                    };
                    a.sharetitle &&
                      (s.append(`<span class="title">${a.sharetitle}</span>`),
                      (o = `${a.sharetitle} on `)),
                      a.share.map(function (t) {
                        s.buttonize(c[t].url, o + c[t].title, [
                          c[t].title.toLowerCase(),
                          a.buttonclass,
                          'icon',
                        ]);
                      }),
                      e.append(s);
                  }
                  if ('undefined' !== Object.keys(a.follow)) {
                    const n = t('<div class="jSocial-follow" />');
                    let i = '';
                    a.followtitle &&
                      (n.append(`<span class="title">${a.followtitle}</span>`),
                      (i = `${a.followtitle} on `)),
                      t.each(a.follow, function () {
                        n.buttonize(this.url, i + this.title, [
                          this.title.replace(/ /g, '').toLowerCase(),
                          a.buttonclass,
                          'icon',
                        ]);
                      }),
                      e.append(n);
                  }
                });
              },
              init: function () {
                s.style(jQuery(this));
              },
            };
          return this.each(s.init);
        }),
        (i.jTabs = function (t) {
          const e = jQuery.extend(
              { active: 0, orient: 'horizontal', cclass: 'jTabs' },
              t,
            ),
            n = {
              showContent: function (t, e) {
                const n = e.find('.content'),
                  i = t.parent().find('.panel-content');
                e.activate(),
                  i.fadeOut('normal', function () {
                    jQuery(this).html(n.html()).fadeIn('normal');
                  });
              },
              init: function () {
                const t = jQuery(this),
                  i = t.find('> li'),
                  a = jQuery('<div/>').classify([e.orient, `${e.cclass}-wrap`]);
                t.once(e.cclass, function () {
                  t
                    .wrap(a)
                    .after(
                      '<div class="panel"><div class="panel-content" /></div>',
                    ),
                    i.each(function () {
                      const t = jQuery(this);
                      t.addClass('tab').kidWrap(),
                        t.children().eq(0).addClass('title'),
                        t.children().eq(1).addClass('content').hide();
                    });
                }),
                  i.each(function () {
                    const e = jQuery(this);
                    e.click(function (i) {
                      i.preventDefault(), n.showContent(t, e);
                    });
                  }),
                  n.showContent(t, i.eq([e.active]));
              },
            };
          return this.each(n.init);
        });
    },
  }),
    jQuery.fn.extend(cellular);
})(jQuery);
